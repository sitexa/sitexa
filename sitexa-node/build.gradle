group 'com.sitexa.ktor'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.2.30'
    ext.shadow_version = '2.0.0'
    ext.functionale_version = '0.8'
    ext.kovenant_version = '3.3.0'
    ext.fuel_version = '1.3.1'
    ext.kotson_version = '2.5.0'
    ext.joda_version = '2.9.4'
    ext.hikari_version = '2.4.7'
    ext.flyway_version = '4.0.3'
    ext.jbcrypt_version = '0.4.1'
    ext.kotliquery_version = '1.1.0'
    ext.kotlintest_version = '1.3.3'
    ext.logback_version = '1.1.7'
    ext.slf4j_version = '1.7.21'
    ext.mariadb_java_client_version = '1.5.9'
    ext.okhttp_version = '3.6.0'
    ext.retrofit_version = '2.2.0'
    ext.moshi_version = '1.4.0'
    ext.exposed_version = '0.7.6'
    ext.jackson_version = '2.7.5'

    ext.ktor_version = '0.9.1'
    ext.gson_version = '2.7'
    ext.typesafe_version = '1.2.1'
    ext.ehcache_version = '3.0.0.m4'
    ext.freemarker_version = '[2.3.23,2.4)'
    ext.jsoup_version = '1.7.3'
    ext.thumbnailator_version = '[0.4, 0.5)'

    repositories {
        jcenter()
        maven {
            url "https://dl.bintray.com/kotlin/ktor"
        }
        maven {
            url "http://dl.bintray.com/kotlin/exposed"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version",
                "com.github.jengelman.gradle.plugins:shadow:$shadow_version"
    }

}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configure([compileKotlin, compileTestKotlin]) {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

repositories {
    //mavenCentral()
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    maven { url "http://dl.bintray.com/kotlin/exposed" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    compile "org.funktionale:funktionale:$functionale_version"
    compile "nl.komponents.kovenant:kovenant:$kovenant_version"
    compile "com.github.kittinunf.fuel:fuel:$fuel_version"
    compile "com.github.salomonbrys.kotson:kotson:$kotson_version"
    compile "joda-time:joda-time:$joda_version"

    compile "org.flywaydb:flyway-core:$flyway_version"
    compile "com.zaxxer:HikariCP:$hikari_version"
    compile "de.svenkubiak:jBCrypt:$jbcrypt_version"
    compile "ch.qos.logback:logback-classic:$logback_version"
    compile "org.slf4j:slf4j-api:$slf4j_version"

    compile "org.mariadb.jdbc:mariadb-java-client:$mariadb_java_client_version"
    compile "org.jetbrains.exposed:exposed:$exposed_version"

    compile "com.squareup.okhttp3:okhttp:$okhttp_version"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    compile "com.squareup.retrofit2:retrofit:$retrofit_version"
    compile "com.squareup.retrofit2:converter-gson:$retrofit_version"
    compile "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    compile "com.squareup.moshi:moshi:$moshi_version"
    
    compile "io.ktor:ktor-server-core:$ktor_version"
    compile "io.ktor:ktor-server-jetty:$ktor_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-auth:$ktor_version"
    compile "io.ktor:ktor-freemarker:$ktor_version"
    compile "io.ktor:ktor-locations:$ktor_version"
    compile "io.ktor:ktor-websockets:$ktor_version"
    compile "io.ktor:ktor-gson:$ktor_version"

    compile "org.freemarker:freemarker:$freemarker_version"

    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
    compile "com.typesafe:config:$typesafe_version"
    compile "com.google.code.gson:gson:$gson_version"
    compile "org.ehcache:ehcache:$ehcache_version"
    compile "org.jsoup:jsoup:$jsoup_version"
    compile "net.coobird:thumbnailator:$thumbnailator_version"
}


mainClassName = 'org.jetbrains.ktor.netty.DevelopmentHost'

def mainMethod = 'com.sitexa.ktor.SweetNode.install'

def watchForChange = 'src/**/*.kt'

def doOnChange = 'gradle classes'

def configurationFile = 'resources/application.conf'

run {
    args = ['run', mainMethod, "--redeploy=$watchForChange",
            "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange",
            "-conf $configurationFile"]
}